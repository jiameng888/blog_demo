<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.model.post.mapper.PostsMapper">
    <resultMap id="BaseResultMap" type="com.blog.model.post.entity.Posts">
        <id column="post_id" jdbcType="INTEGER" property="postId"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="created" jdbcType="TIMESTAMP" property="created"/>
        <result column="last_modified" jdbcType="TIMESTAMP" property="lastModified"/>
    </resultMap>
    <insert id="addPost">
        INSERT INTO posts(post_id, title, content, user_id, created, last_modified)
        VALUES (null, #{title}, #{content}, #{userId}, now(), now())
    </insert>
    <update id="updatePostByPostId">
        update posts
        <set>
            <if test="title != null and title != ''">
                title = #{title},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            last_modified = now()
        </set>
        where post_id = #{postId}
    </update>
    <delete id="deletePostByPostId">
        delete
        from posts
        where post_id = #{postId}
    </delete>
    <select id="findAllPostByUserId" resultMap="BaseResultMap">
        select post_id, title, content, user_id, created, last_modified
        from posts
        where user_id = #{userId}
        order by created desc
    </select>
    <select id="findPostByPostId" resultMap="BaseResultMap">
        select post_id, title, content, user_id, created, last_modified
        from posts
        where post_id = #{postId}
    </select>

</mapper>